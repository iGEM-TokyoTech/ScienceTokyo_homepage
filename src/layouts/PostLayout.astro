---
/**
 * „É¨„Ç§„Ç¢„Ç¶„Éà„ÅÆ‰∏≠„Åß„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥„ÅÆË¶ÅÁ¥†„ÅÆ„É¨„Ç§„Ç¢„Ç¶„Éà
 */
import Layout from "./Layout.astro";
import MDXDocEnv from "../components/MDXDocEnv.astro";
import { type BaseLayoutProps } from "./BaseLayout.astro";
import { type MarkdownHeading } from "astro";
import ToC from "../components/ToC/ToC.astro";


interface Props extends BaseLayoutProps {
  headings: MarkdownHeading[];
  frontmatter: {
    title: string;
    imgSrc?: string;
    description?: string;
    date?: string;
    tags?: string[];
  };
}

const { frontmatter, headings, ...props } = Astro.props;
---

<Layout headings={headings} {...props}> 
  <ToC headings={headings} />
    <MDXDocEnv>
      <div class="post-wrapper">
        <div class="post-card">
          <div class="post-header">
            <img class="post-header-background-img" src={frontmatter.imgSrc ?? ""} />
          </div>
          <div class="post-header-contents">
            <h1 class="post-header-title">{frontmatter.title}</h1>
            <p class="post-header-description">{frontmatter.description}</p>
            <div class="post-header-tags">
              {(frontmatter.tags ?? []).map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
            <div class="post-header-meta">
              <span class="post-header-date">üñä {frontmatter.date ?? 'Êó•‰ªò‰∏çÊòé'}</span>
            </div>
          </div>
          <slot /> 
        </div>
      </div>
    </MDXDocEnv>
</Layout>

<!-- Êóß„Çπ„ÇØ„É™„Éó„ÉàÈÉ®ÂàÜ„ÅØÂâäÈô§ -->
<script is:inline>
  // „Çπ„ÇØ„É≠„Éº„É´‰ªò„ÅçÁõÆÊ¨°„É™„É≥„ÇØ„ÅÆ„ÇØ„É™„ÉÉ„ÇØ„Ç§„Éô„É≥„Éà
  document.addEventListener("DOMContentLoaded", () => {
    // ÁõÆÊ¨°„ÅÆ„É™„É≥„ÇØ„ÇíÂèñÂæó
    const tocLinks = document.querySelectorAll('.toc a');

    // ÂêÑ„É™„É≥„ÇØ„Å´„ÇØ„É™„ÉÉ„ÇØ„Ç§„Éô„É≥„Éà„ÇíËøΩÂä†
    tocLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault(); // „Éá„Éï„Ç©„É´„Éà„ÅÆÂãï‰Ωú„Çí„Ç≠„É£„É≥„Çª„É´

        // hrefÂ±ûÊÄß„Åã„ÇâÂØæË±°„ÅÆID„ÇíÂèñÂæó
        const targetId = link.getAttribute('href')?.replace('#', '');
        if (!targetId) return;

        // ÂØæË±°„ÅÆË¶ÅÁ¥†„ÇíÂèñÂæó
        const targetElement = document.getElementById(targetId);
        if (!targetElement) return;

        // „Çπ„É†„Éº„Ç∫„Çπ„ÇØ„É≠„Éº„É´Ôºà80px„Éò„ÉÉ„ÉÄ„ÉºÂàÜ„Çí„Ç™„Éï„Çª„ÉÉ„ÉàÔºâ
        const y = targetElement.getBoundingClientRect().top + window.scrollY - 80;
        window.scrollTo({ top: y, behavior: "smooth" });
        history.replaceState(null, "", "#" + targetId);
      });
    });

    // Ë¶ãÂá∫„Åó„ÅÆÁõ£Ë¶ñ„ÉªÁõÆÊ¨°„Éè„Ç§„É©„Ç§„ÉàÔºàÁ∞°Êòì‰æãÔºâ
    const headings = document.querySelectorAll("h1, h2");
    const tocItems = document.querySelectorAll(".toc li");

    const observer = new IntersectionObserver((entries) => {
      let visibleEntry = null;
      entries.forEach(entry => {
        if (entry.isIntersecting && entry.intersectionRatio > 0) {
          visibleEntry = entry;
        }
      });
      if (visibleEntry) {
        const id = visibleEntry.target.id;
        tocItems.forEach(i => i.classList.remove("highlighted"));
        const active = document.querySelector(`.toc li[data-slug="${id}"]`);
        if (active) {
          active.classList.add("highlighted");
        }
      }
    }, { rootMargin: "0px 0px -60% 0px", threshold: 0.1 });

    headings.forEach(h => observer.observe(h));
  });
</script>



<style>
  .post-wrapper {
    width: 100%;
    height:auto;
    display: flex;
    justify-content: flex-end;
    padding-right: 0;
    margin-right: 0;
  }

  .post-card {
    position: relative;
    width: 90%; /* ToC„ÅÆÂπÖ„ÇíËÄÉÊÖÆ */
    border-radius: 0.5rem;
    background: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    padding: 1rem;
    transition: transform 0.2s ease;
    margin-right: 0;
  }

  /* „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú */
  @media (max-width: 768px) {
    .post-card {
      width: 100%;
    }
  }

  .post-header {
    position: relative;
    width: 100%;
    height: 40vh;
    overflow: hidden;
  }
  .post-header-background-img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .post-header-contents {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 1rem;
  }
  .post-header-title {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }
  .post-header-description {
    font-size: 1.2rem;
    margin-bottom: 1rem;
  }
  .post-header-tags {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 1rem;
  }
  .post-header-tags .tag {
    color: #000;
    border-radius: 0.5rem;
    padding: 0.3rem 0.6rem;
    margin: 0.2rem;
    font-size: 0.9rem;
  }
  .post-header-meta {
    font-size: 0.8rem;
    color: #000;
  }
  .post-header-date {
    margin-left: 0.5rem;
  }
  
  /* „Çπ„É†„Éº„Ç∫„Çπ„ÇØ„É≠„Éº„É´„ÅÆ„Åü„ÇÅ„ÅÆË®≠ÂÆö */
  html {
    scroll-behavior: smooth;
  }
</style>


